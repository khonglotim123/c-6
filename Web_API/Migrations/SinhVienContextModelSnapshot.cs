// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_API.Context;

namespace Web_API.Migrations
{
    [DbContext(typeof(SinhVienContext))]
    partial class SinhVienContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_API.Models.Diem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMonhoc")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SoDiem")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdMonhoc");

                    b.ToTable("Diem");
                });

            modelBuilder.Entity("Web_API.Models.Lop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdTruong")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTruong");

                    b.ToTable("Lop");
                });

            modelBuilder.Entity("Web_API.Models.MonHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNghanh")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNghanh");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("Web_API.Models.Nghanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNghanh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nghanh");
                });

            modelBuilder.Entity("Web_API.Models.SinhVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLop")
                        .HasColumnType("int");

                    b.Property<int>("IdNghanh")
                        .HasColumnType("int");

                    b.Property<string>("MaSV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLop");

                    b.HasIndex("IdNghanh");

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("Web_API.Models.Truong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTruong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Truong");
                });

            modelBuilder.Entity("Web_API.Models.Diem", b =>
                {
                    b.HasOne("Web_API.Models.MonHoc", "monHoc")
                        .WithMany("diems")
                        .HasForeignKey("IdMonhoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("monHoc");
                });

            modelBuilder.Entity("Web_API.Models.Lop", b =>
                {
                    b.HasOne("Web_API.Models.Truong", "truong")
                        .WithMany("lops")
                        .HasForeignKey("IdTruong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("truong");
                });

            modelBuilder.Entity("Web_API.Models.MonHoc", b =>
                {
                    b.HasOne("Web_API.Models.Nghanh", "nghanh")
                        .WithMany("monHocs")
                        .HasForeignKey("IdNghanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nghanh");
                });

            modelBuilder.Entity("Web_API.Models.SinhVien", b =>
                {
                    b.HasOne("Web_API.Models.Lop", "lop")
                        .WithMany("sinhViens")
                        .HasForeignKey("IdLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_API.Models.Nghanh", "nghanh")
                        .WithMany("sinhViens")
                        .HasForeignKey("IdNghanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lop");

                    b.Navigation("nghanh");
                });

            modelBuilder.Entity("Web_API.Models.Lop", b =>
                {
                    b.Navigation("sinhViens");
                });

            modelBuilder.Entity("Web_API.Models.MonHoc", b =>
                {
                    b.Navigation("diems");
                });

            modelBuilder.Entity("Web_API.Models.Nghanh", b =>
                {
                    b.Navigation("monHocs");

                    b.Navigation("sinhViens");
                });

            modelBuilder.Entity("Web_API.Models.Truong", b =>
                {
                    b.Navigation("lops");
                });
#pragma warning restore 612, 618
        }
    }
}
